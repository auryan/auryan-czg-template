const path = require("path");
const fs = require("fs");

const projectPackageJson = JSON.parse(fs.readFileSync(path.join(process.cwd(), "package.json"), "utf8"));

var template = {
	messages: {
		type: newMessage(
			"Select the type of change that you're committing:",
			"Selecione o tipo de mudan√ßa que voc√™ est√° commitando:"
		),
		scope: newMessage(
			"(Optional) Denote the SCOPE of this change:",
			"(Opcional) Indique o ESCOPO desta mudan√ßa:"
		),
		customScope: newMessage(
			"Denote the SCOPE of this change:",
			"Indique o ESCOPO desta mudan√ßa:"
		),
		subject: newMessage(
			"Write a SHORT, IMPERATIVE tense description of the CHANGE:\n",
			"Escreva uma mensagem CURTA e IMPERATIVA que descreve O QUE a sua mudan√ßa faz:\n"
		),
		body: newMessage(
			'(Optional) Provide a more DETAILED description of the change. Use "|" to break line:\n',
			'(Opcional) Forne√ßa mais DETALHES sobre a mudan√ßa, como o PORQU√ä dela ter sido feita. Use "|" para pular linha:\n'
		),
		breaking: newMessage(
			'(Optional) List any BREAKING CHANGES. Use "|" to break line:\n',
			'(Opcional) Liste quaisquer BREAKING CHANGES. Use "|" para pular linha:\n'
		),
		footerPrefixesSelect: newMessage(
			"(Optional) Select the ISSUES type of changeList by this change:",
			"(Opcional) Selecione o tipo de ISSUES resolvido por esta mudan√ßa:",

		),
		customFooterPrefix: newMessage(
			"Insert ISSUES prefix:",
			"Insira o prefixo de ISSUES:"
		),
		footer: newMessage(
			"List any ISSUES by this change. E.g.: #31, #34:\n",
			"Liste quaisquer ISSUES que essa mudan√ßa resolve. Ex.: #31, #34:\n"
		),
		generatingByAI: newMessage(
			"Generating your AI commit subject...",
			"Gerando sua mensagem de commit por IA..."
		),
		generatedSelectByAI: newMessage(
			"Select the message generated by AI most suitable:",
			"Selecione a mensagem gerada pela IA mais adequada:"
		),
		confirmCommit: newMessage(
			"Are you sure you want to proceed with the commit above?",
			"Tem certeza de que deseja prosseguir com o commit acima?"
		)
	},
	types: [
		newType("feat", "‚ú®", ":sparkles:",
			"Implementing a new feature.",
			"Implementando uma nova funcionalidade."
		),
		newType("feat", "üì±", ":iphone:",
			"Working on responsive design.",
			"Trabalhando em design responsivo."
		),
		newType("feat", "üí´", ":dizzy:",
		"Adding or updating animations and transitions.",
			"Adicionando ou atualizando anima√ß√µes e transi√ß√µes."
		),
		newType("feat", "üåê", ":globe_with_meridians:",
			"Internationalizing or localizing.",
			"Internacionalizando ou localizando."
		),
		newType("feat", "üö∏", ":children_crossing:",
			"Improving user experience / usability.",
			"Melhorando a experi√™ncia do usu√°rio / usabilidade."
		),
		newType("feat", "‚ôøÔ∏è", ":wheelchair:",
			"Improving accessibility.",
			"Melhorando a acessibilidade."
		),
		newType("feat", "ü•ö", ":egg:",
			"Adding or updating easter eggs.",
			"Adicionando ou atualizando um easter egg."
		),
		newType("experiment", "‚öóÔ∏è ", ":alembic:",
			"Experimenting new things.",
			"Experimentando novas coisas."
		),
		newType("wip", "üöß", ":construction:",
			"Doing a work in progress.",
			"Fazendo um trabalho que est√° em andamento."
		),
		newType("breaking change", "üí•", ":boom:",
			"Introducing BREAKING CHANGES.",
			"Introduzindo BREAKING CHANGES."
		),
		newType("fix", "üêõ", ":bug:",
			"Fixing a bug.",
			"Corrigindo um bug."
		),
		newType("fix", "üñãÔ∏è ", ":fountain_pen:",
			"Fixing typos.",
			"Corrigindo erros de digita√ß√£o que afetam o funcionamento do c√≥digo."
		),
		newType("fix", "ü•Ö", ":goal_net:",
			"Catching errors.",
			"Capturando erros."
		),
		newType("hotfix", "üöë", ":ambulance:",
			"Critical hotfix.",
			"Corrigindo falha cr√≠tica."
		),
		newType("security", "üîí", ":lock:",
			"Fixing security issues.",
			"Corrigindo problemas de seguran√ßa."
		),
		newType("lint", "üö®", ":rotating_light:",
			"Removing linter warnings.",
			"Removendo avisos do linter."
		),
		newType("types", "üè∑Ô∏è ", ":label:",
			"Adding or updating types.",
			"Adicionando ou atualizando tipos de dados."
		),
		newType("performance", "‚ö°Ô∏è", ":zap:",
			"Improving performance.",
			"Fazendo mudan√ßas de c√≥digo que melhoram o desempenho."
		),
		newType("deprecate", "üóëÔ∏è ", ":wastebasket:",
			"Deprecating code that needs to be cleaned up.",
			"Depreciando c√≥digo que precisa ser limpo."
		),
		newType("style", "üé®", ":art:",
			"Improving structure / format of the code.",
			"Melhorando a estrutura / formato do c√≥digo."
		),
		newType("style", "üíÑ", ":lipstick:",
			"Updating the UI and style files.",
			"Fazendo mudan√ßas que n√£o afetam o significado do c√≥digo."
		),
		newType("refactor", "‚ôªÔ∏è ", ":recycle:",
			"Refactoring code.",
			"Refatorando c√≥digo."
		),
		newType("refactor", "üí©", ":poop:",
			"Writing bad code that needs to be improved.",
			"Escrevendo c√≥digo ruim que precisa ser melhorado."
		),
		newType("refactor", "‚ö∞Ô∏è ", ":coffin:",
			"Removing dead code.",
			"Removendo c√≥digo morto."
		),
		newType("refactor", "üëå", ":ok_hand:",
			"Updating code due to code review changes.",
			"Atualizando c√≥digo devido a mudan√ßas na revis√£o de c√≥digo."
		),
		newType("refactor", "üöö", ":truck:",
			"Moving or renaming files.",
			"Movendo ou renomeando arquivos."
		),
		newType("add", "‚ú®", ":sparkles:",
			"Adding new features.",
			"Adicionando c√≥digos ou arquivos."
		),
		newType("remove", "üî•", ":fire:",
			"Removing code or files.",
			"Removendo c√≥digos ou arquivos."
		),
		newType("chore", "‚öôÔ∏è ", ":gear:",
			"Changing configuration files.",
			"Fazendo mudan√ßas em arquivos de configura√ß√£o."
		),
		newType("chore", "üöÄ", ":rocket:",
			"Deploying stuff.",
			"Fazendo deploy de coisas"
		),
		newType("test", "‚úÖ", ":white_check_mark:",
			"Adding missing tests or correcting existing tests.",
			"Adicionando testes ausentes ou corrigindo testes existentes."
		),
		newType("dependency", "üëΩ", ":alien:",
			"Updating code due to external API changes.",
			"Atualizando o c√≥digo devido √†s mudan√ßas em APIs externas."
		),
		newType("dependency", "‚¨áÔ∏è ", ":arrow_down:",
			"Downgrading dependencies.",
			"Desatualizando depend√™ncias."
		),
		newType("dependency", "‚¨ÜÔ∏è ", ":arrow_up:",
			"Upgrading dependencies.",
			"Atualizando depend√™ncias."
		),
		newType("dependency", "‚ûï", ":heavy_plus_sign:",
			"Adding a dependency.",
			"Adicionando depend√™ncia."
		),
		newType("dependency", "‚ûñ", ":heavy_minus_sign:",
			"Removing a dependency.",
			"Removendo depend√™ncia."
		),
		newType("build", "üì¶Ô∏è", ":package:",
			"Changing build process, adding or updating compiled files or packages.",
			"Fazendo mudan√ßas que afetam o sistema de build ou depend√™ncias externas."
		),
		newType("docs", "üìö", ":books:",
			"Changing documentation.",
			"Fazendo mudan√ßas apenas na documenta√ß√£o."
		),
		newType("docs", "üí°", ":bulb:",
			"Documenting source code.",
			"Documentando o c√≥digo fonte."
		),
		newType("docs", "‚úèÔ∏è", ":pencil:",
			"Fixing typos in comments or documentation.",
			"Corrigindo erros de digita√ß√£o em coment√°rios ou documenta√ß√µes."
		),
		newType("docs", "üë•", ":busts_in_silhouette:",
			"Adding or updating contributor(s).",
			"Adicionando ou atualizando contribuidor(es)."
		),
		newType("license", "üìÑ", ":page_facing_up:",
			"Adding or updating license.",
			"Adicionando ou atualizando licen√ßa."
		),
		newType("merge", "üîÄ", ":twisted_rightwards_arrows:",
			"Merging branches.",
			"Mesclando branches."
		),
		newType("revert", "‚è™Ô∏è", ":rewind:",
			"Reverting changes.",
			"Revertendo mudan√ßas."
		),
		newType("ignore", "üôà", ":see_no_evil:",
			"Adding or updating a .gitignore file.",
			"Adicionando ou atualizando um arquivo .gitignore."
		),
		newType("init", "üéâ", ":tada:",
			"Doing initial commit.",
			"Fazendo o commit inicial"
		)
	],
	useEmoji: true,
	emojiAlign: "left",
	useAI: false,
	aiQuestionCB: undefined,
	aiNumber: 5,
	themeColorCode: "",
	scopes: [],
	allowCustomScopes: true,
	allowEmptyScopes: true,
	customScopesAlign: "bottom",
	customScopesAlias: "custom",
	emptyScopesAlias: "empty",
	upperCaseSubject: true,
	markBreakingChangeMode: false,
	allowBreakingChanges: ["feat", "fix"],
	breaklineNumber: 100,
	breaklineChar: "|",
	skipQuestions: [],
	issuePrefixes: undefined,
	customIssuePrefixAlign: "top",
	emptyIssuePrefixAlias: "skip",
	customIssuePrefixAlias: "custom",
	allowCustomIssuePrefix: true,
	allowEmptyIssuePrefix: true,
	confirmColorize: true,
	maxHeaderLength: Infinity,
	maxSubjectLength: 95,
	minSubjectLength: 10,
	scopeOverrides: undefined,
	defaultBody: "",
	defaultIssues: "",
	defaultScope: "",
	defaultSubject: ""
};

switch (projectPackageJson.config.language) {
	case "en-US":
		template.aiQuestionCB = ({maxSubjectLength, diff}) =>
			`Write an insightful and concise Git commit message in the present tense for the following Git diff code, without any prefixes, and no longer than ${maxSubjectLength} characters.: \`\`\`diff\n${diff}\n\`\`\``;
		template.issuePrefixes = [{value: "closed", name: "closed:   ISSUES has been processed" }];
		break;
		
	case "pt-BR":
		template.aiQuestionCB = ({maxSubjectLength, diff}) =>
			`Escreva uma mensagem de commit do Git perspicaz e concisa no tempo imperativo para o seguinte c√≥digo de diff do Git, sem nenhum prefixo e n√£o mais do que ${maxSubjectLength} caracteres.: \`\`\`diff\n${diff}\n\`\`\``;
		template.issuePrefixes = [{value: "closed", name: "closed:   ISSUES foram processados" }];
		break;
}

/*--------------------------------------------------------------------------------------------*/

function newType(value, emoji, github_emoji, name_enUS, name_ptBR) {
	let name;

	switch (projectPackageJson.config.language) {
		case "en-US":
			name = name_enUS;
			break;
			
		case "pt-BR":
			name = name_ptBR;
			break;
	}

	return {
		value: value,
		name: `${emoji} ` + name,
		emoji: github_emoji
	};
}

function newMessage(text_enUS, text_ptBR) {
	let text;

	switch (projectPackageJson.config.language) {
		case "en-US":
			text = text_enUS;
			break;
			
		case "pt-BR":
			text = text_ptBR;
			break;
	}

	return text;
}

/*--------------------------------------------------------------------------------------------*/

module.exports = template;